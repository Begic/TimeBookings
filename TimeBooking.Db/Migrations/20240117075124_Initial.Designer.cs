// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeBooking.Db;

#nullable disable

namespace TimeBooking.Db.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20240117075124_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TimeBooking.Db.Entities.TimeBookingDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BookingDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TimeBookingDays");
                });

            modelBuilder.Entity("TimeBooking.Db.Entities.TimeBookingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TimeBookingDayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TimeBookingDayId");

                    b.ToTable("TimeBookingDetails");
                });

            modelBuilder.Entity("TimeBooking.Db.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TimeBooking.Db.Entities.TimeBookingDay", b =>
                {
                    b.HasOne("TimeBooking.Db.Entities.User", "User")
                        .WithMany("TimeBookingDays")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TimeBooking.Db.Entities.TimeBookingDetail", b =>
                {
                    b.HasOne("TimeBooking.Db.Entities.TimeBookingDay", "TimeBookingDay")
                        .WithMany("TimeBookingDetails")
                        .HasForeignKey("TimeBookingDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TimeBookingDay");
                });

            modelBuilder.Entity("TimeBooking.Db.Entities.TimeBookingDay", b =>
                {
                    b.Navigation("TimeBookingDetails");
                });

            modelBuilder.Entity("TimeBooking.Db.Entities.User", b =>
                {
                    b.Navigation("TimeBookingDays");
                });
#pragma warning restore 612, 618
        }
    }
}
